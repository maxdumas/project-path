//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Text;
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class CombatWindowTest : MonoBehaviour
{
    public Player player;

	public SpriteRenderer BackgroundPrefab;
	public SpriteRenderer PlayerSpritePrefab;
	public Monster MonsterPrefab;


	//public SpriteRenderer PoisonDebuff;
	//public SpriteRenderer BlindDebuff;


    private SpriteRenderer MonsterSprite;
	private SpriteRenderer PlayerSprite;
    private SpriteRenderer Background;
	//private Monster monster;


	private Animator PlayerAnimator;

	/*
	private Animator MonsterAnimator;

	private float PlayerCombatSpeed = 0.5f;
	private float NextPlayerCombat = 0.0f;
	private float PlayerPause = 0.1f;

	private float MonsterCombatSpeed = 1.0f;
	private float NextMonsterCombat = 0.0f;
	private float MonsterPause = 1.0f;

	private int MonsterNumAttacks = 1;
	private int MonsterCurrAttacks = 0;

	private bool IsPlayerDefending = false;
	private bool IsMonsterDefending = false;


	//Attack Chances based on Accuracy and Evasion
	private float PlayerAttackChance;
	private float MonsterAttackChance;

	//Poison
	private float PlayerNextPoisonTick = 0.0f;
	private float MonsterNextPoisonTick = 0.0f;

	//Blind
	private float PlayerBlindLength = 0.0f;
	private float MonsterBlindLength = 0.0f;
	

	private float roll;

	//private List<SpriteRenderer> PlayerBuffs = new List<SpriteRenderer>();
	//private List<SpriteRenderer> MonsterBuffs = new List<SpriteRenderer>();

	private Dictionary<string,SpriteRenderer> PlayerBuffs;// = new Dictionary<string,SpriteRenderer>();
	private Dictionary<string,SpriteRenderer> MonsterBuffs;// = new Dictionary<string,SpriteRenderer>();

	private bool BuffUpdate;
	*/


	void Update()
	{

	}

    public void Enable()
    {

		Camera cam = Camera.main;
		float CamHeight = 2f * cam.orthographicSize;
		float CamWidth = CamHeight * cam.aspect;

		float HalfCamWidth = CamWidth / 2f;
		float HalfCamHeight = cam.orthographicSize;


		//Background
		Background = (SpriteRenderer)Instantiate(BackgroundPrefab, transform.position, Quaternion.identity);

		Background.enabled = false;
		Debug.Log("Background Local Scale = " + Background.transform.localScale);
		Debug.Log("Screen Width = " + Screen.width);
		Debug.Log("Screen Height = " + Screen.height);

		Debug.Log("Camera Local Scale = " + cam.transform.localScale);
		Debug.Log("Camera Width = " + CamWidth);
		Debug.Log("Camera Height = " + CamHeight);
	
		float bgWidth = Background.transform.renderer.bounds.max.x - Background.transform.renderer.bounds.min.x;
		float bgHeight = Background.transform.renderer.bounds.max.y - Background.transform.renderer.bounds.min.y;

		float bgWidthScale = (CamWidth / bgWidth);
		float bgHeightScale = (CamHeight / bgHeight);

		Debug.Log("bgWidthScale = " + bgWidthScale);	

		Background.transform.localScale = new Vector3(bgWidthScale, bgHeightScale, 0);

		Background.transform.position = new Vector3(player.transform.position.x, player.transform.position.y, player.transform.position.z);
        Background.sortingLayerName = "Background";
		Background.enabled = true;



		//PlayerSprite

		PlayerSprite = (SpriteRenderer)Instantiate(PlayerSpritePrefab, transform.position, Quaternion.identity);
		PlayerSprite.enabled = false;

		float PlayerXPos = player.transform.position.x - (HalfCamWidth * 0.68f);
		float PlayerYPos = player.transform.position.y - (HalfCamHeight * 0.57f);

		PlayerSprite.transform.position = new Vector3(PlayerXPos,PlayerYPos,0);
		PlayerSprite.sortingLayerName = "Midground";
		PlayerSprite.enabled = true;

		PlayerSprite.color = Color.cyan;


		//MonsterSprite

		MonsterSprite = (SpriteRenderer)Instantiate(MonsterPrefab.GetComponent<SpriteRenderer>(),transform.position,Quaternion.identity);
		MonsterSprite.enabled = false;

		float MonsterXPos = player.transform.position.x + (HalfCamWidth * 0.68f);
		float MonsterYPos = player.transform.position.y - (HalfCamHeight * 0.57f);

		MonsterSprite.transform.position = new Vector3(MonsterXPos,MonsterYPos,0);
		MonsterSprite.sortingLayerName = "Midground";
		MonsterSprite.enabled = true;

    }

	public void DestroyWindow()
	{
		Destroy(Background);
		Destroy(this);
	}

	public void ScaleSize(SpriteRenderer sprite) {


	}
	
}

